{"version":3,"sources":["context/GlobalContext.jsx","components/forms/LoginForm.jsx","components/forms/SignUpForm.jsx","components/WelcomeHeader.jsx","components/pages/WelcomePage.jsx","components/LogoutButton.jsx","components/DrawerUI.jsx","components/pages/HomePage.jsx","components/EditUserProps.jsx","components/UpdateUserInfo.jsx","components/ListAllUsers.jsx","components/CommentCommit.jsx","components/ListCommits.jsx","components/ListRequests.jsx","components/ProjectInfo.jsx","components/EditProject.jsx","components/ListAllProjects.jsx","components/ListStudents.jsx","routes/GeneralProtected.jsx","components/CreateProject.jsx","components/MyProjects.jsx","components/EditMyProject.jsx","components/StudentProjects.jsx","components/forms/NewCommit.jsx","App.js","index.js"],"names":["GlobalContext","createContext","GlobalContextProvider","children","useState","currentUser","setCurrentUser","useEffect","user","localStorage","getItem","JSON","parse","Provider","value","LoginForm","email","setEmail","password","setPassword","error","setError","navigate","useNavigate","useContext","timer","setTimeout","clearTimeout","handleSubmit","e","a","preventDefault","payload","fetch","method","headers","body","stringify","res","json","data","status","setItem","get","window","alert","console","log","Box","sx","my","Grid","container","justifyContent","alignItems","item","xs","md","Typography","variant","onSubmit","TextField","onChange","target","id","label","required","fullWidth","type","Button","mt","align","color","SignUpForm","name","setName","surname","setSurname","rol","setRol","success","setSuccess","firstName","lastName","FormControl","InputLabel","Select","labelId","map","option","MenuItem","endIcon","WelcomeHeader","setSignUp","onClick","WelcomePage","signUp","auth","clear","Container","LogoutButton","TemporaryDrawer","anchor","React","left","state","setState","leftAnchor","menuItems","destination","path","icon","hasAccess","toggleDrawer","open","event","key","display","mb","Drawer","onClose","width","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","secondary","Divider","route","includes","to","primary","Home","EditUserProps","useLocation","props","setProps","Authorization","mr","size","UpdateUserInfo","updatedUser","setUpdatedUser","confirmPassword","setConfirmPassword","ListAllUsers","users","setUsers","fetchUsers","spacing","Card","CardContent","fontSize","gutterBottom","component","CardActions","_id","CommentCommit","project","comment","setComment","commit","setIsVisible","observations","commitID","multiline","ListCommits","isVisible","title","content","borderTop","author","ListRequests","p","handleClick","secondaryAction","IconButton","edge","ListItemAvatar","Avatar","ProjectInfo","participants","setParticipants","newParticipants","student","handleFetch","targetUser","find","s","phase","generalObjectives","specificObjectives","budget","commits","length","subheader","ListSubheader","EditProject","m","ListAllProjects","projects","setProjects","fetchProjects","handleJoin","adminButton","exist","ListStudents","filter","toLowerCase","GeneralProtected","authorization","userString","checkPermit","CreateProject","setProject","minRows","MyProjects","myProjects","EditMyProject","placeholder","StudentProjects","studentProjects","some","NewCommit","setCommit","location","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbfb7983.chunk.js","sourcesContent":["// set an state with the user info after login\nimport { createContext, useEffect, useState } from 'react'\n\nexport const GlobalContext = createContext(null)\n\nconst GlobalContextProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState({})\n  useEffect(() => {\n    const user = localStorage.getItem('user')\n    if (user) {\n      setCurrentUser(JSON.parse(user))\n    }\n  }, [])\n\n  return <GlobalContext.Provider value={{ currentUser, setCurrentUser }}>{children}</GlobalContext.Provider>\n}\n\nexport default GlobalContextProvider\n","// HU_002\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useContext, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport { GlobalContext } from '../../context/GlobalContext'\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(false)\n  const navigate = useNavigate()\n  // globalContext\n  const { setCurrentUser } = useContext(GlobalContext)\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/user/login'\n    const payload = { email, password }\n    try {\n      const res = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (!data) {\n        setError(true)\n      } else {\n        const user = data.data.user\n        if (user.status === 'Accepted') {\n          localStorage.setItem('Authorization', res.headers.get('Authorization'))\n          localStorage.setItem('user', JSON.stringify(user))\n          setCurrentUser(user)\n          navigate('/home')\n        } else {\n          window.alert('You are not authorized yet.')\n        }\n      }\n    } catch (err) {\n      console.log(err)\n      setError(true)\n    }\n  }\n  return (\n    <Box sx={{ my: 4 }}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Grid item xs={8} md={4}>\n          <Typography variant='h4'>Welcome back!</Typography>\n          <form onSubmit={handleSubmit}>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={email}\n                error={error}\n                onChange={(e) => setEmail(e.target.value)}\n                id='email'\n                label='Email'\n                variant='outlined'\n                required\n                fullWidth\n                type='email'\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={password}\n                error={error}\n                onChange={(e) => setPassword(e.target.value)}\n                id='password'\n                label='Password'\n                variant='outlined'\n                type='password'\n                fullWidth\n                required\n              />\n            </Box>\n\n            <Button variant='contained' type='submit'>\n              Login\n            </Button>\n          </form>\n          {error && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='error'>\n                Error: Verify your credentials\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default LoginForm\n","//HU_001\nimport SendIcon from '@mui/icons-material/Send'\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useState, useEffect } from 'react'\n\nconst SignUpForm = () => {\n  const [name, setName] = useState('')\n  const [surname, setSurname] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [rol, setRol] = useState('')\n  const options = ['Student', 'Leader', 'Admin']\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  const clearForm = () => {\n    setName('')\n    setSurname('')\n    setEmail('')\n    setPassword('')\n    setRol('')\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/user/signup'\n    const payload = {\n      firstName: name,\n      lastName: surname,\n      email,\n      password,\n      rol,\n    }\n    try {\n      const res = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (data) {\n        clearForm()\n        setSuccess(true)\n      }\n    } catch (err) {\n      console.log(err)\n      setError(true)\n    }\n  }\n  return (\n    <Box sx={{ my: 4 }}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Grid item xs={8} md={5}>\n          <Typography variant='h4'>Welcome aboard!</Typography>\n          <form onSubmit={handleSubmit}>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                id='firstName'\n                label='Name'\n                variant='outlined'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={surname}\n                onChange={(e) => setSurname(e.target.value)}\n                id='lastName'\n                label='Surname'\n                variant='outlined'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                id='email'\n                label='Email'\n                variant='outlined'\n                required\n                fullWidth\n                type='email'\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                id='password'\n                label='Password'\n                variant='outlined'\n                type='password'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel id='select-label'>Rol</InputLabel>\n                <Select\n                  error={error}\n                  labelId='select-label'\n                  id='rol'\n                  value={rol}\n                  label='Rol'\n                  onChange={(e) => setRol(e.target.value)}\n                >\n                  {options.map((option) => (\n                    <MenuItem key={option} value={option}>\n                      {option}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n            <Button variant='contained' endIcon={<SendIcon />} type='submit'>\n              Submit\n            </Button>\n          </form>\n          {error && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='error'>\n                Error: Verify your credentials\n              </Typography>\n            </Box>\n          )}\n          {success && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='green'>\n                Account successfully created! You may login now.\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default SignUpForm\n","import { Button, Grid, Typography } from '@mui/material'\n\nconst WelcomeHeader = ({ setSignUp }) => {\n  return (\n    <Grid container justifyContent='center' alignItems='center' sx={{ mt: 1 }}>\n      <Grid item xs={7} md={4}>\n        <Typography variant='h4'>AppName</Typography>\n      </Grid>\n      <Grid item xs={2} md={2}>\n        <Button onClick={() => setSignUp(true)}>Sign Up</Button>\n        <Button onClick={() => setSignUp(false)}>Login</Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default WelcomeHeader\n","import { Container } from '@mui/material'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport LoginForm from '../forms/LoginForm'\nimport SignUpForm from '../forms/SignUpForm'\nimport WelcomeHeader from '../WelcomeHeader'\n\nconst WelcomePage = () => {\n  const [signUp, setSignUp] = useState(false)\n  const navigate = useNavigate()\n  useEffect(() => {\n    const auth = localStorage.getItem('Authorization')\n    const user = localStorage.getItem('user')\n    if (auth && user) {\n      navigate('/home')\n    } else {\n      localStorage.clear()\n    }\n  })\n  return (\n    <Container>\n      <WelcomeHeader setSignUp={setSignUp} />\n      {signUp ? <SignUpForm /> : <LoginForm />}\n    </Container>\n  )\n}\n\nexport default WelcomePage\n","import { Button } from '@mui/material'\nimport { useContext } from 'react'\nimport { useNavigate } from 'react-router'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst LogoutButton = () => {\n  const { setCurrentUser } = useContext(GlobalContext)\n  const navigate = useNavigate()\n  const handleClick = () => {\n    localStorage.clear()\n    setCurrentUser({})\n    navigate('/')\n  }\n  return (\n    <>\n      <Button color='error' variant='outlined' onClick={handleClick}>\n        Log out\n      </Button>\n    </>\n  )\n}\n\nexport default LogoutButton\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport Drawer from '@mui/material/Drawer'\nimport Button from '@mui/material/Button'\nimport List from '@mui/material/List'\nimport Divider from '@mui/material/Divider'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport HomeIcon from '@mui/icons-material/Home'\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd'\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder'\nimport AutoStoriesIcon from '@mui/icons-material/AutoStories'\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon'\nimport GroupIcon from '@mui/icons-material/Group'\nimport ArchiveIcon from '@mui/icons-material/Archive'\nimport ListItemText from '@mui/material/ListItemText'\nimport AssignmentTurnedInIcon from '@mui/icons-material/AssignmentTurnedIn'\nimport BadgeIcon from '@mui/icons-material/Badge'\nimport { Link } from 'react-router-dom'\nimport LogoutButton from './LogoutButton'\nimport { GlobalContext } from '../context/GlobalContext'\nexport default function TemporaryDrawer() {\n  const [state, setState] = React.useState({ left: false })\n  const leftAnchor = 'left'\n  const { currentUser } = React.useContext(GlobalContext)\n  const menuItems = [\n    {\n      destination: 'Home',\n      id: 1,\n      path: '/home',\n      icon: <HomeIcon />,\n      hasAccess: ['Student', 'Admin', 'Leader'],\n    },\n    {\n      destination: 'Update Info',\n      id: 2,\n      path: '/home/updateUserInfo',\n      icon: <AssignmentIndIcon />,\n      hasAccess: ['Student', 'Admin', 'Leader'],\n    },\n    {\n      destination: 'New Project',\n      id: 3,\n      path: '/home/projects/create',\n      icon: <CreateNewFolderIcon />,\n      hasAccess: ['Admin', 'Leader'],\n    },\n    {\n      destination: 'My Projects',\n      id: 4,\n      path: '/home/projects/myProjects',\n      icon: <ArchiveIcon />,\n      hasAccess: ['Admin', 'Leader'],\n    },\n    {\n      destination: 'List Users',\n      id: 5,\n      path: '/home/users/listAll',\n      icon: <GroupIcon />,\n      hasAccess: ['Admin', 'Leader'],\n    },\n    {\n      destination: 'List Projects',\n      id: 6,\n      path: '/home/projects/listProjects',\n      icon: <AutoStoriesIcon />,\n      hasAccess: ['Student', 'Admin', 'Leader'],\n    },\n    {\n      destination: 'Your Projects',\n      id: 7,\n      path: '/home/projects/studentProjects',\n      icon: <AssignmentTurnedInIcon />,\n      hasAccess: ['Student'],\n    },\n    {\n      destination: 'List Students',\n      id: 8,\n      path: '/home/users/listStudents',\n      icon: <InsertEmoticonIcon />,\n      hasAccess: ['Admin', 'Leader'],\n    },\n  ]\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n    setState({ ...state, [anchor]: open })\n  }\n\n  const list = (anchor) => (\n    <Box sx={{ width: 250 }} role='menu' onClick={toggleDrawer(anchor, false)} onKeyDown={toggleDrawer(anchor, false)}>\n      <List>\n        <ListItem button>\n          <ListItemIcon>\n            <BadgeIcon />\n          </ListItemIcon>\n          <ListItemText secondary={currentUser.email} />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        {menuItems.map((route) => {\n          const userHasAccess = route.hasAccess.includes(currentUser.rol)\n          if (userHasAccess) {\n            return (\n              <Link to={route.path} key={route.id}>\n                <ListItem button>\n                  <ListItemIcon>{route.icon}</ListItemIcon>\n                  <ListItemText primary={route.destination} />\n                </ListItem>\n              </Link>\n            )\n          } else {\n            return null\n          }\n        })}\n      </List>\n      <Divider />\n    </Box>\n  )\n\n  return (\n    <div>\n      <>\n        <Box sx={{ display: 'flex', justifyContent: 'space-around', mb: 1 }}>\n          <Button onClick={toggleDrawer(leftAnchor, true)}>Menu</Button>\n          <LogoutButton />\n        </Box>\n\n        <Drawer anchor={leftAnchor} open={state[leftAnchor]} onClose={toggleDrawer(leftAnchor, false)}>\n          {list(leftAnchor)}\n        </Drawer>\n      </>\n    </div>\n  )\n}\n","import { Outlet } from 'react-router-dom'\nimport TemporaryDrawer from '../DrawerUI'\n\nconst Home = () => {\n  return (\n    <div>\n      <TemporaryDrawer />\n      <Outlet />\n    </div>\n  )\n}\n\nexport default Home\n","// HU_005\n// HU_011\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router'\nconst EditUserProps = () => {\n  const location = useLocation()\n  const { user } = location.state\n  const [props, setProps] = useState({ rol: '', status: '' })\n  const [error, setError] = useState(false)\n  const navigate = useNavigate()\n  const rolOptions = ['Leader', 'Teacher', 'Student']\n  const statusOptions = ['Pending', 'Accepted', 'Rejected']\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/user/update'\n    if (props.rol && props.status) {\n      try {\n        const payload = { ...user, ...props }\n        const res = await fetch(endPoint, {\n          method: 'PUT',\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        const data = await res.json()\n        if (data) {\n          navigate(-1)\n        }\n      } catch (err) {\n        console.log(err)\n        setError(true)\n      }\n    } else {\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n  return (\n    <Grid container justifyContent='center'>\n      <Grid>\n        <Typography>Do you want to edit this user's rol and status?</Typography>\n        {user && (\n          <form onSubmit={handleSubmit}>\n            <Box sx={{ my: 2 }}>\n              <Typography>Name: {user.firstName}</Typography>\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <Typography>Surname: {user.lastName}</Typography>\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <Typography>Email: {user.email}</Typography>\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <Typography>\n                Current user's rol: {user.rol} and status: {user.status}\n              </Typography>\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel id='select-rol'>Rol</InputLabel>\n                <Select\n                  labelId='select-label'\n                  id='rol'\n                  value={props.rol}\n                  label='Rol'\n                  onChange={(e) => setProps({ ...props, rol: e.target.value })}\n                >\n                  {rolOptions.map((option) => (\n                    <MenuItem key={option} value={option}>\n                      {option}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel id='select-status'>Status</InputLabel>\n                <Select\n                  labelId='select-label'\n                  id='status'\n                  value={props.status}\n                  label='Status'\n                  onChange={(e) => setProps({ ...props, status: e.target.value })}\n                >\n                  {statusOptions.map((option) => (\n                    <MenuItem key={option} value={option}>\n                      {option}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n            <Button\n              sx={{ mr: 2 }}\n              onClick={() => {\n                navigate(-1)\n              }}\n              size='small'\n            >\n              Go back\n            </Button>\n            <Button variant='contained' type='submit'>\n              Submit\n            </Button>\n          </form>\n        )}\n        {error && (\n          <Box sx={{ mt: 2 }}>\n            <Typography align='center' color='error'>\n              Error: Verify your credentials\n            </Typography>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default EditUserProps\n","// HU_003\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useEffect, useState } from 'react'\nimport SendIcon from '@mui/icons-material/Send'\nimport { useNavigate } from 'react-router'\n\nconst UpdateUserInfo = () => {\n  // const { currentUser } = useContext(GlobalContext)\n  const [updatedUser, setUpdatedUser] = useState(JSON.parse(localStorage.getItem('user')))\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [error, setError] = useState(false)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n\n  useEffect(() => {}, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    if (password === confirmPassword) {\n      const endPoint = 'http://localhost:8000/user/update'\n      const payload = {\n        ...updatedUser,\n        password,\n      }\n      try {\n        const res = await fetch(endPoint, {\n          method: 'PUT',\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        const data = await res.json()\n        if (data) {\n          navigate('/')\n          let updatedUser = JSON.stringify(data.data)\n          localStorage.setItem('user', updatedUser)\n        }\n      } catch (err) {\n        console.log(err)\n        setError(true)\n      }\n    } else {\n      setError(true)\n    }\n  }\n  return (\n    <Box sx={{ my: 4 }}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Grid item xs={8} md={5}>\n          <Typography variant='h4'>Editing {updatedUser.firstName}'s info!</Typography>\n          <form onSubmit={handleSubmit}>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={updatedUser.firstName}\n                onChange={(e) => setUpdatedUser({ ...updatedUser, firstName: e.target.value })}\n                id='firstName'\n                label='First Name'\n                variant='outlined'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={updatedUser.lastName}\n                onChange={(e) => setUpdatedUser({ ...updatedUser, lastName: e.target.value })}\n                id='lastName'\n                label='Last Name'\n                variant='outlined'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={updatedUser.email}\n                onChange={(e) => setUpdatedUser({ ...updatedUser, email: e.target.value })}\n                id='email'\n                label='Email'\n                variant='outlined'\n                required\n                fullWidth\n                type='email'\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                id='password'\n                label='Password'\n                variant='outlined'\n                type='password'\n                fullWidth\n                required\n              />\n            </Box>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                id='confirmPassword'\n                label='Confirm Password'\n                variant='outlined'\n                type='password'\n                fullWidth\n                required\n              />\n            </Box>\n            <Button variant='contained' endIcon={<SendIcon />} type='submit'>\n              Submit\n            </Button>\n          </form>\n          {error && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='error'>\n                Error: Verify your credentials\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default UpdateUserInfo\n","// HU_004\nimport { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material'\nimport { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst ListAllUsers = () => {\n  const [users, setUsers] = useState([])\n  const { currentUser } = useContext(GlobalContext)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const endPoint = 'http://localhost:8000/user/users'\n      try {\n        const res = await fetch(endPoint, {\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n        })\n        if (res.status === 401) {\n          localStorage.clear()\n          navigate('/')\n        }\n        const data = await res.json()\n        if (data) {\n          setUsers(data.data)\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchUsers()\n  }, [navigate])\n  const hasAccess = currentUser.rol !== 'Student' && currentUser.status === 'Accepted'\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {users &&\n          users.map((user) => (\n            <Grid item key={user._id} xs={12} md={3}>\n              <Card variant='outlined'>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n                    {user.email}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {user.firstName} {user.lastName}\n                  </Typography>\n                  <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n                    {user.status}\n                  </Typography>\n                  <Typography variant='body2'>{user.rol}</Typography>\n                </CardContent>\n                <CardActions>\n                  {hasAccess && (\n                    <Link to={`/home/users/editUser/${user._id}`} state={{ user }}>\n                      <Button size='small'>More</Button>\n                    </Link>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default ListAllUsers\n","import { Box, Button, TextField } from '@mui/material'\nimport SendIcon from '@mui/icons-material/Send'\n\nconst CommentCommit = ({ project, comment, setComment, commit, setIsVisible }) => {\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const endPoint = 'http://localhost:8000/project/commentCommit'\n      const payload = {\n        observations: comment,\n        _id: project._id,\n        commitID: commit._id,\n      }\n      const res = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: localStorage.getItem('Authorization'),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (data) {\n        setIsVisible(false)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <TextField label='Comment' multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n        <Button type='submit'>\n          <SendIcon />\n        </Button>\n      </Box>\n    </form>\n  )\n}\n\nexport default CommentCommit\n","import { ListItem, ListItemText, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { useContext, useState } from 'react'\nimport { GlobalContext } from '../context/GlobalContext'\nimport CommentCommit from './CommentCommit'\n\nconst ListCommits = ({ commit, project }) => {\n  const [isVisible, setIsVisible] = useState(false)\n  const [comment, setComment] = useState(commit.observations)\n\n  const { currentUser } = useContext(GlobalContext)\n  return (\n    <>\n      <ListItem onClick={() => setIsVisible(!isVisible)}>\n        <ListItemText>\n          <Typography sx={{ fontSize: 14 }} color='text.secondary'>\n            {commit.user.email}\n          </Typography>\n          <Typography variant='h5'>{commit.commit.title}</Typography>\n          <Typography>{commit.commit.content}</Typography>\n          {commit.observations && (\n            <Box sx={{ mt: 3, borderTop: 'grey 1px solid' }}>\n              <Typography>Leader: {comment || commit.observations}</Typography>\n            </Box>\n          )}\n        </ListItemText>\n      </ListItem>\n      {currentUser.email === project.author && isVisible && (\n        <CommentCommit\n          project={project}\n          comment={comment}\n          setComment={setComment}\n          commit={commit}\n          setIsVisible={setIsVisible}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ListCommits\n","import { Avatar, IconButton, ListItem, ListItemAvatar, ListItemText } from '@mui/material'\n\nimport AddIcon from '@mui/icons-material/Add'\nimport RemoveIcon from '@mui/icons-material/Remove'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\n\nconst ListRequests = ({ p, handleClick }) => {\n  const pending = 'Pending'\n  return (\n    <>\n      <ListItem\n        key={p._id}\n        secondaryAction={\n          <IconButton onClick={() => handleClick(p)} edge='end'>\n            {p.status === pending ? <AddIcon /> : <RemoveIcon />}\n          </IconButton>\n        }\n      >\n        <ListItemAvatar>\n          <Avatar>\n            <AccountCircleIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText>\n          {p.user.email} is {p.status}\n        </ListItemText>\n      </ListItem>\n    </>\n  )\n}\n\nexport default ListRequests\n","import { Button, Card, CardActions, CardContent, Grid, List, ListSubheader, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\n\nimport { useContext, useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { GlobalContext } from '../context/GlobalContext'\nimport ListCommits from './ListCommits'\nimport ListRequests from './ListRequests'\nconst ProjectInfo = () => {\n  const { currentUser } = useContext(GlobalContext)\n  const location = useLocation()\n  const { project } = location.state\n  const navigate = useNavigate()\n  const [participants, setParticipants] = useState(project.participants)\n\n  useEffect(() => {\n    if (!project) {\n      navigate('/home')\n    }\n  }, [project, navigate])\n\n  const handleClick = async (p) => {\n    const newParticipants = participants.map((student) => {\n      if (student._id === p._id) {\n        student.status === 'Pending' ? (student.status = 'Accepted') : (student.status = 'Pending')\n      }\n      return student\n    })\n    await handleFetch(p)\n    await setParticipants(newParticipants)\n  }\n\n  const handleFetch = async (p) => {\n    const endPoint = 'http://localhost:8000/project/updateStatus'\n    // find user and take the status from there\n    const targetUser = project.participants.find((s) => s.user._id === p.user._id)\n    try {\n      const payload = {\n        _id: project._id,\n        user: p.user._id,\n        status: targetUser.status,\n      }\n      const res = await fetch(endPoint, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.getItem('Authorization'),\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (data) {\n        console.log('status updated')\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <Grid container justifyContent='space-around'>\n      <Grid item key={project._id} xs={12} md={6}>\n        <Card variant='outlined'>\n          <CardContent>\n            <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n              Author: {project.author}\n            </Typography>\n            <Typography variant='h5' component='div'>\n              {project.title}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }}>Status: {project.status}</Typography>\n            <Typography variant='body2'>Phase: {project.phase}</Typography>\n            <Typography sx={{ mt: 1.5 }}>General Objectives: {project.generalObjectives}</Typography>\n            <Typography sx={{ mt: 1.5 }}>Specific Objectives: {project.specificObjectives}</Typography>\n            <Typography sx={{ mt: 1.5 }}>Initial budget: {project.budget}</Typography>\n            {project.commits.length > 0 && (\n              <Box sx={{ mt: 2 }}>\n                <List subheader=\"Student's commits:\">\n                  {project.commits.map((commit) => (\n                    <ListCommits commit={commit} key={commit._id} project={project} />\n                  ))}\n                </List>\n              </Box>\n            )}\n          </CardContent>\n          <CardActions>\n            <Button\n              onClick={() => {\n                navigate(-1)\n              }}\n              size='small'\n            >\n              Go back\n            </Button>\n\n            {currentUser.rol === 'Admin' && (\n              <Link to={`/home/projects/editProject/${project._id}`} state={{ project }}>\n                <Button size='small'>Edit</Button>\n              </Link>\n            )}\n          </CardActions>\n        </Card>\n      </Grid>\n      {project.author === currentUser.email && (\n        <Grid item>\n          <List subheader={<ListSubheader>Participants</ListSubheader>}>\n            {participants.map((p) => {\n              return <ListRequests p={p} handleClick={handleClick} key={p.user._id} />\n            })}\n          </List>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default ProjectInfo\n","// HU_005\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router'\nconst EditProject = () => {\n  const location = useLocation()\n  const { project } = location.state\n  const [props, setProps] = useState({ phase: '', status: '' })\n  const [error, setError] = useState(false)\n  const navigate = useNavigate()\n  const phaseOptions = ['Development', 'Suspended', 'Completed']\n  const statusOptions = ['Pending', 'Accepted', 'Rejected']\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/project/update'\n    if (props.phase && props.status) {\n      try {\n        const payload = { ...project, ...props }\n        const res = await fetch(endPoint, {\n          method: 'PUT',\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        const data = await res.json()\n        if (data) {\n          navigate(-1)\n        }\n      } catch (err) {\n        console.log(err)\n        setError(true)\n      }\n    } else {\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n\n  return (\n    <Box sx={{ m: 2 }}>\n      <Grid container justifyContent='center'>\n        <Grid>\n          <Typography>Do you want to edit this project's phase, and status?</Typography>\n          {project && (\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ my: 2 }}>\n                <Typography>Title: {project.title}</Typography>\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <Typography>Author: {project.author}</Typography>\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <Typography>Budget: {project.budget}</Typography>\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <Typography>\n                  Current project's phase: {project.phase} and status: {project.status}\n                </Typography>\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <FormControl fullWidth>\n                  <InputLabel id='select-phase'>Phase</InputLabel>\n                  <Select\n                    labelId='select-label'\n                    id='phase'\n                    value={props.phase}\n                    label='Phase'\n                    onChange={(e) => setProps({ ...props, phase: e.target.value })}\n                  >\n                    {phaseOptions.map((option) => (\n                      <MenuItem key={option} value={option}>\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <FormControl fullWidth>\n                  <InputLabel id='select-status'>Status</InputLabel>\n                  <Select\n                    labelId='select-label'\n                    id='status'\n                    value={props.status}\n                    label='Status'\n                    onChange={(e) => setProps({ ...props, status: e.target.value })}\n                  >\n                    {statusOptions.map((option) => (\n                      <MenuItem key={option} value={option}>\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n\n              <Button\n                sx={{ mr: 2 }}\n                onClick={() => {\n                  navigate(-1)\n                }}\n                size='small'\n              >\n                Go back\n              </Button>\n              <Button variant='contained' type='submit'>\n                Submit\n              </Button>\n            </form>\n          )}\n\n          {error && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='error'>\n                Error: Verify your credentials\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default EditProject\n","// HU_006\nimport { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material'\nimport { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\nimport AddIcon from '@mui/icons-material/Add'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst ListAllProjects = () => {\n  const [projects, setProjects] = useState([])\n  const navigate = useNavigate()\n  const { currentUser } = useContext(GlobalContext)\n  useEffect(() => {\n    fetchProjects()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const fetchProjects = async () => {\n    const endPoint = 'http://localhost:8000/project/projects'\n    try {\n      const res = await fetch(endPoint, {\n        headers: {\n          Authorization: localStorage.getItem('Authorization'),\n          'Content-Type': 'application/json',\n        },\n      })\n      if (res.status === 401) {\n        localStorage.clear()\n        navigate('/')\n      }\n      const data = await res.json()\n      if (data) {\n        setProjects(data.data)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const handleJoin = async (_id, user) => {\n    const endPoint = 'http://localhost:8000/project/newParticipant'\n    try {\n      const res = await fetch(endPoint, {\n        method: 'PUT',\n        headers: {\n          Authorization: localStorage.getItem('Authorization'),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ _id, user }),\n      })\n      const data = await res.json()\n      if (data) {\n        fetchProjects()\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const adminButton = currentUser.status === 'Accepted' && currentUser.rol === 'Admin'\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {projects &&\n          projects.map((project) => {\n            const exist = project.participants.find((p) => p.user._id === currentUser._id)\n            return (\n              <Grid item key={project._id} xs={12} md={3}>\n                <Card variant='outlined'>\n                  <CardContent>\n                    <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n                      Author: {project.author}\n                    </Typography>\n\n                    <Typography variant='h5' component='div'>\n                      {project.title}\n                    </Typography>\n                    <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n                      Status: {project.status}\n                    </Typography>\n                    <Typography variant='body2'>Phase: {project.phase}</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link to={`/home/projects/projectInfo/${project._id}`} state={{ project }}>\n                      <Button size='small'>More info</Button>\n                    </Link>\n                    {adminButton && (\n                      <Link to={`/home/projects/editProject/${project._id}`} state={{ project }}>\n                        <Button size='small'>Edit</Button>\n                      </Link>\n                    )}\n                    {!exist ? (\n                      <Button size='small' onClick={() => handleJoin(project._id, currentUser._id)}>\n                        <AddIcon />\n                      </Button>\n                    ) : (\n                      <CheckCircleIcon />\n                    )}\n                  </CardActions>\n                </Card>\n              </Grid>\n            )\n          })}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default ListAllProjects\n","// HU_010\nimport { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\n\nconst ListStudents = () => {\n  const [users, setUsers] = useState([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const endPoint = 'http://localhost:8000/user/users'\n      try {\n        const res = await fetch(endPoint, {\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n        })\n        if (res.status === 401) {\n          localStorage.clear()\n          navigate('/')\n        }\n        const data = await res.json()\n        if (data) {\n          setUsers(data.data.filter((s) => s.rol.toLowerCase() === 'student'))\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchUsers()\n  }, [navigate])\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {users &&\n          users.map((user) => (\n            <Grid item key={user._id} xs={12} md={3}>\n              <Card variant='outlined'>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n                    {user.email}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {user.firstName} {user.lastName}\n                  </Typography>\n                  <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n                    {user.status}\n                  </Typography>\n                  <Typography variant='body2'>{user.rol}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Link to={`/home/users/editUser/${user._id}`} state={{ user }}>\n                    <Button size='small'>Edit</Button>\n                  </Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default ListStudents\n","import { Navigate, Outlet } from 'react-router-dom'\n\nconst checkPermit = () => {\n  const authorization = localStorage.getItem('Authorization')\n  const userString = localStorage.getItem('user')\n  const user = JSON.parse(userString)\n  return authorization && user.status\n}\n\nconst GeneralProtected = () => {\n  const isAuth = checkPermit()\n  return isAuth ? <Outlet /> : <Navigate to='/' />\n}\n\nexport default GeneralProtected\n","// HU__12\nimport SendIcon from '@mui/icons-material/Send'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useState, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst CreateProject = () => {\n  const { currentUser } = useContext(GlobalContext)\n  const navigate = useNavigate()\n  const [project, setProject] = useState({\n    title: '',\n    generalObjectives: '',\n    specificObjectives: '',\n    budget: '',\n  })\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/project/new'\n    const payload = {\n      ...project,\n      author: currentUser.email,\n    }\n    try {\n      const res = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.getItem('Authorization'),\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (data) {\n        setSuccess(true)\n        navigate('/home')\n      }\n    } catch (err) {\n      console.log(err)\n      setError(true)\n    }\n  }\n  return (\n    <>\n      <Box sx={{ my: 4 }}>\n        <Grid container justifyContent='center' alignItems='center'>\n          <Grid item xs={8} md={5}>\n            <Typography variant='h4'>New Project</Typography>\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  value={project.title}\n                  onChange={(e) => setProject({ ...project, title: e.target.value })}\n                  id='title'\n                  label='Title'\n                  variant='outlined'\n                  fullWidth\n                  required\n                />\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  multiline\n                  minRows={3}\n                  value={project.generalObjectives}\n                  onChange={(e) => setProject({ ...project, generalObjectives: e.target.value })}\n                  id='generalObjectives'\n                  label='General Objectives'\n                  variant='outlined'\n                  fullWidth\n                  required\n                />\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  multiline\n                  minRows={3}\n                  value={project.specificObjectives}\n                  onChange={(e) => setProject({ ...project, specificObjectives: e.target.value })}\n                  id='specificObjectives'\n                  label='Specific Objectives'\n                  variant='outlined'\n                  required\n                  fullWidth\n                />\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  value={project.budget}\n                  onChange={(e) => setProject({ ...project, budget: e.target.value })}\n                  id='budget'\n                  label='Budget'\n                  variant='outlined'\n                  required\n                  fullWidth\n                  type='number'\n                />\n              </Box>\n              <Button variant='contained' endIcon={<SendIcon />} type='submit'>\n                Submit\n              </Button>\n            </form>\n            {error && (\n              <Box sx={{ mt: 2 }}>\n                <Typography align='center' color='error'>\n                  Error: Verify your inputs\n                </Typography>\n              </Box>\n            )}\n            {success && (\n              <Box sx={{ mt: 2 }}>\n                <Typography align='center' color='green'>\n                  Project successfully created!\n                </Typography>\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default CreateProject\n","// HU_014\nimport { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material'\nimport { useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst MyProjects = () => {\n  const { currentUser } = useContext(GlobalContext)\n  const [projects, setProjects] = useState([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const endPoint = 'http://localhost:8000/project/projects'\n      try {\n        const res = await fetch(endPoint, {\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n        })\n        if (res.status === 401) {\n          localStorage.clear()\n          navigate('/')\n        }\n        const data = await res.json()\n        if (data) {\n          const myProjects = data.data.filter((p) => p.author === currentUser.email)\n          setProjects(myProjects)\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchProjects()\n  }, [navigate, currentUser.email])\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {projects &&\n          projects.map((project) => (\n            <Grid item key={project._id} xs={12} md={3}>\n              <Card variant='outlined'>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n                    Author: {project.author}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {project.title}\n                  </Typography>\n                  <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n                    Status: {project.status}\n                  </Typography>\n                  <Typography variant='body2'>Phase: {project.phase}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Link to={`/home/projects/projectInfo/${project._id}`} state={{ project }}>\n                    <Button size='small'>More info</Button>\n                  </Link>\n                  {project.status === 'Accepted' && (\n                    <Link to={`/home/projects/editMy/${project._id}`} state={{ project }}>\n                      <Button size='small'>Edit</Button>\n                    </Link>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default MyProjects\n","// HU_005\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router'\nconst EditMyProject = () => {\n  const location = useLocation()\n  const { project } = location.state\n  const [props, setProps] = useState({\n    title: project.title,\n    generalObjectives: project.generalObjectives,\n    specificObjectives: project.specificObjectives,\n    budget: project.budget,\n  })\n  const [error, setError] = useState(false)\n  const navigate = useNavigate()\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const endPoint = 'http://localhost:8000/project/update'\n    if (props.title && props.generalObjectives && props.specificObjectives && props.budget) {\n      try {\n        const payload = { ...project, ...props }\n        const res = await fetch(endPoint, {\n          method: 'PUT',\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        const data = await res.json()\n        if (data) {\n          navigate(-1)\n        }\n      } catch (err) {\n        console.log(err)\n        setError(true)\n      }\n    } else {\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setError(false)\n    }, 4000)\n\n    return () => clearTimeout(timer)\n  }, [error])\n\n  return (\n    <Box>\n      <Grid container justifyContent='center'>\n        <Grid item xs={10} md={6}>\n          <Typography>Do you want to edit your project?</Typography>\n          {project && (\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ my: 1.5 }}>\n                <TextField\n                  value={props.title}\n                  placeholder='Title'\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    setProps({ ...props, title: e.target.value })\n                  }}\n                />\n              </Box>\n              <Box sx={{ my: 1.5 }}>\n                <TextField\n                  value={props.generalObjectives}\n                  placeholder='General Objectives'\n                  multiline\n                  minRows={3}\n                  fullWidth\n                  required\n                  onChange={(e) => {\n                    setProps({ ...props, generalObjectives: e.target.value })\n                  }}\n                />\n              </Box>\n              <Box sx={{ my: 1.5 }}>\n                <TextField\n                  value={props.specificObjectives}\n                  placeholder='Specific Objectives'\n                  fullWidth\n                  multiline\n                  minRows={3}\n                  required\n                  onChange={(e) => {\n                    setProps({ ...props, specificObjectives: e.target.value })\n                  }}\n                />\n              </Box>\n              <Box sx={{ my: 1.5 }}>\n                <TextField\n                  value={props.budget}\n                  placeholder='Budget'\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    setProps({ ...props, budget: e.target.value })\n                  }}\n                />\n              </Box>\n              <Button\n                sx={{ mr: 2 }}\n                onClick={() => {\n                  navigate(-1)\n                }}\n                size='small'\n              >\n                Go back\n              </Button>\n              <Button variant='contained' type='submit'>\n                Submit\n              </Button>\n            </form>\n          )}\n\n          {error && (\n            <Box sx={{ mt: 2 }}>\n              <Typography align='center' color='error'>\n                Error: Verify your credentials\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default EditMyProject\n","import { Button, Card, CardActions, CardContent, Container, Grid, Typography } from '@mui/material'\nimport { Link } from 'react-router-dom'\nimport { useContext, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { GlobalContext } from '../context/GlobalContext'\n\nconst StudentProjects = () => {\n  const { currentUser } = useContext(GlobalContext)\n\n  const [projects, setProjects] = useState([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const endPoint = 'http://localhost:8000/project/projects'\n      try {\n        const res = await fetch(endPoint, {\n          headers: {\n            Authorization: localStorage.getItem('Authorization'),\n            'Content-Type': 'application/json',\n          },\n        })\n        if (res.status === 401) {\n          localStorage.clear()\n          navigate('/')\n        }\n        const data = await res.json()\n        if (data) {\n          const studentProjects = data.data.filter((project) => {\n            return project.participants.some((student) => {\n              return student.user.email === currentUser.email && student.status === 'Accepted'\n            })\n          })\n          setProjects(studentProjects)\n        }\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    fetchProjects()\n  }, [navigate, currentUser.email])\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        {projects &&\n          projects.map((project) => (\n            <Grid item key={project._id} xs={12} md={3}>\n              <Card variant='outlined'>\n                <CardContent>\n                  <Typography sx={{ fontSize: 14 }} color='text.secondary' gutterBottom>\n                    Author: {project.author}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {project.title}\n                  </Typography>\n                  <Typography sx={{ mb: 1.5 }} color='text.secondary'>\n                    Status: {project.status}\n                  </Typography>\n                  <Typography variant='body2'>Phase: {project.phase}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Link to={`/home/projects/projectInfo/${project._id}`} state={{ project }}>\n                    <Button size='small'>More info</Button>\n                  </Link>\n                  {project.status === 'Accepted' && (\n                    // make this route\n                    <Link to={`/home/projects/newCommit/${project._id}`} state={{ project }}>\n                      <Button size='small'>New Commit</Button>\n                    </Link>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default StudentProjects\n","import SendIcon from '@mui/icons-material/Send'\nimport { Button, Grid, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { useContext, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { GlobalContext } from '../../context/GlobalContext'\nconst NewCommit = () => {\n  const [commit, setCommit] = useState({\n    title: '',\n    content: '',\n  })\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { currentUser } = useContext(GlobalContext)\n  const { project } = location.state\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const endPoint = 'http://localhost:8000/project/commit'\n      const payload = {\n        commit,\n        _id: project._id,\n        user: currentUser._id,\n      }\n      const res = await fetch(endPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: localStorage.getItem('Authorization'),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n      const data = await res.json()\n      if (data) {\n        navigate(-1)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <>\n      <Box sx={{ my: 4 }}>\n        <Grid container justifyContent='center' alignItems='center'>\n          <Grid item xs={11} md={5}>\n            <Typography variant='h4'>New Commit</Typography>\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  value={commit.title}\n                  onChange={(e) => setCommit({ ...commit, title: e.target.value })}\n                  id='title'\n                  label='Title'\n                  variant='outlined'\n                  fullWidth\n                  required\n                />\n              </Box>\n              <Box sx={{ my: 2 }}>\n                <TextField\n                  multiline\n                  minRows={4}\n                  value={commit.content}\n                  onChange={(e) => setCommit({ ...commit, content: e.target.value })}\n                  id='content'\n                  label='Content'\n                  variant='outlined'\n                  fullWidth\n                  required\n                />\n              </Box>\n              <Button\n                sx={{ mr: 3 }}\n                onClick={() => {\n                  navigate(-1)\n                }}\n                size='small'\n              >\n                Go back\n              </Button>\n              <Button variant='contained' endIcon={<SendIcon />} type='submit'>\n                Submit\n              </Button>\n            </form>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default NewCommit\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport WelcomePage from './components/pages/WelcomePage'\nimport Home from './components/pages/HomePage'\nimport EditUserProps from './components/EditUserProps'\nimport UpdateUserInfo from './components/UpdateUserInfo'\nimport ListAllUsers from './components/ListAllUsers'\nimport ProjectInfo from './components/ProjectInfo'\nimport EditProject from './components/EditProject'\nimport ListAllProjects from './components/ListAllProjects'\nimport ListStudents from './components/ListStudents'\nimport GeneralProtected from './routes/GeneralProtected'\nimport CreateProject from './components/CreateProject'\nimport MyProjects from './components/MyProjects'\nimport EditMyProject from './components/EditMyProject'\nimport StudentProjects from './components/StudentProjects'\nimport NewCommit from './components/forms/NewCommit'\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route path='/' element={<WelcomePage />} />\n          <Route element={<GeneralProtected />}>\n            <Route path='/home' element={<Home />}>\n              <Route path='updateUserInfo' element={<UpdateUserInfo />} />\n              <Route path='users'>\n                <Route path='listAll' element={<ListAllUsers />} />\n                <Route path='listStudents' element={<ListStudents />} />\n                <Route path='editUser/:id' element={<EditUserProps />} />\n              </Route>\n              <Route path='projects'>\n                <Route path='listProjects' element={<ListAllProjects />} />\n                <Route path='projectInfo/:id' element={<ProjectInfo />} />\n                <Route path='editProject/:id' element={<EditProject />} />\n                <Route path='create' element={<CreateProject />} />\n                <Route path='myProjects' element={<MyProjects />} />\n                <Route path='studentProjects' element={<StudentProjects />} />\n                <Route path='editMy/:id' element={<EditMyProject />} />\n                <Route path='newCommit/:id' element={<NewCommit />} />\n              </Route>\n              {/* <Route path='manage'>\n                <Route path='students' />\n              </Route> */}\n            </Route>\n          </Route>\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport GlobalContextProvider from './context/GlobalContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}